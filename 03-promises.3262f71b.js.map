{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,aAC9BC,EAAU,CACdC,SAAU,eACVC,SAAU,OACVC,aAAc,OACdC,QAAS,IACTC,cAAc,EACdC,kBAAmB,cAKrB,SAASC,EAAcN,EAAUO,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAET,E,MAAUO,IAEpBG,EAAO,C,SAAEV,E,MAAUO,GAAQ,GAE5BA,EAAM,G,CAXbX,EAAKmB,iBAAiB,SAetB,SAAkBC,GAChBA,EAAEC,iBACF,MAAQV,MAAAW,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAEK,cAAcC,SAChD,IAAIC,EAAaC,OAAON,EAAMO,OAC1BC,EAAYF,OAAOL,EAAKM,OACxBE,EAAcH,OAAOJ,EAAOK,OAEhC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EAAG,CAExC,IAAIC,EAEFA,EADQ,IAAND,EACaL,EAEAA,EAAaG,GAAaE,EAAI,GAE/CtB,EAAcsB,EAAGC,GACdC,MAAK,EAAC9B,SAAEA,EAAQO,MAAEA,MACjBwB,EAAArC,GAASsC,OAAOC,QACd,uBAAqBjC,QAAiBO,MAAWR,EAC/C,IAGLmC,OAAM,EAAClC,SAAEA,EAAQO,MAAEA,MAClBwB,EAAArC,GAASsC,OAAOG,QACd,sBAAoBnC,QAAeO,MAAWR,EAC9C,IAGNiB,EAAEK,cAAce,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('form.form');\nconst options = {\n  position: 'rigth-bottom',\n  distance: '15px',\n  borderRadius: '15px',\n  timeout: 10000,\n  clickToClose: true,\n  cssAnimationStyle: 'from-right',\n};\n\nform.addEventListener('click', onSumbit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onSumbit(e) {\n  e.preventDefault();\n  const { delay, step, amount } = e.currentTarget.elements;\n  let inputDelay = Number(delay.value);\n  let inputStep = Number(step.value);\n  let inputAmount = Number(amount.value);\n\n  for (let i = 1; i <= inputAmount; i += 1) {\n\n    let currentDelay;\n    if (i === 1) {\n      currentDelay = inputDelay;\n    } else {\n      currentDelay = inputDelay + inputStep * (i - 1);\n    }\n    createPromise(i, currentDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`,\n          options\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`,\n          options\n        );\n      });\n    e.currentTarget.reset();\n  }\n}"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$options","position","distance","borderRadius","timeout","clickToClose","cssAnimationStyle","$47d4ff9957288465$var$createPromise","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","delay1","step","amount","currentTarget","elements","inputDelay","Number","value","inputStep","inputAmount","i","currentDelay","then","$parcel$interopDefault","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.3262f71b.js.map"}